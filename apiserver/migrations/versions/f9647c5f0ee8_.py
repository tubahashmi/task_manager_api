#!./venv/bin/python
# -*- coding: utf-8 -*-

# pylint: disable=C0103,C0116,E1101


"""empty message

Revision ID: f9647c5f0ee8
Revises: bfcafce07ea9
Create Date: 2023-09-06 13:07:33.280708

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f9647c5f0ee8'
down_revision = 'bfcafce07ea9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tasks',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('priority', sa.Enum('RELAXED', 'MEDIUM', 'TIGHT', name='prioritylevel'), nullable=False),
    sa.Column('status', sa.Enum('OPEN', 'IN_WORK', 'COMPLETED', 'DISCARD', name='taskstatus'), nullable=False),
    sa.Column('created_by_id', sa.String(length=36), nullable=True),
    sa.Column('assigned_to_id', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('completion_date', sa.DateTime(), nullable=True),
    sa.Column('tags', sa.String(length=255), nullable=True),
    sa.Column('recurring_task', sa.Boolean(), nullable=True),
    sa.Column('estimate', sa.Integer(), nullable=True),
    sa.Column('actual_time_spent', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('task_id', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dependencies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dependency_task_id', sa.String(length=36), nullable=True),
    sa.Column('dependent_task_id', sa.String(length=36), nullable=True),
    sa.ForeignKeyConstraint(['dependency_task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['dependent_task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subtasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.Column('task_id', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('subtasks')
    op.drop_table('dependencies')
    op.drop_table('comments')
    op.drop_table('tasks')
    # ### end Alembic commands ###
